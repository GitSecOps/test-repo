# This is a basic workflow to help you get started with Actions

name: Analyze Branch

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  pull_request:
    types: [opened, edited, reopened, synchronize]
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Setup sonar scanner
        uses: SonarSource/sonarqube-scan-action@v1.1.0
      
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: 'Checkout repository on branch: ${{ github.REF }}'
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.HEAD_REF }}
  
      - name: Retrieve entire repository history
        run: |
          git fetch --prune --unshallow
      
      - name: Run an analysis of the PR
        env:
          # to get access to secrets.SONAR_TOKEN, provide GITHUB_TOKEN
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: sonar-scanner
          -Dsonar.host.url=${{ secrets.SONAR_URL }}
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
          -Dsonar.pullrequest.key=${{ github.event.number }}
          -Dsonar.pullrequest.branch=${{ github.HEAD_REF }}
          -Dsonar.pullrequest.base=${{ github.BASE_REF }}
          -Dsonar.pullrequest.github.repository=${{ github.repository }}
          -Dsonar.scm.provider=git
          -Dsonar.java.binaries=/tmp
